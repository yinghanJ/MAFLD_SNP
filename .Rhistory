X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "blue", pch = "o")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "blue", pch = "o")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend2, y = eid, col = "blue", pch = "o")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "eid", type = "n", main = "Sample Data Plot")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "blue", pch = "o")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "blue", pch = "o")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend2, y = eid, col = "blue", pch = "o")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
cohort_data <- timeevent_plot20[, subset_cols]
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "eid", type = "n", main = "Sample Data Plot")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red", pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Modify the y-axis label
ylab("sample")
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of a study cohort")
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of a study cohort")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red", pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Subset the data based on the conditions
subset_data <- timeevent_plot[timeevent_plot$X6150.0.0 == 0 & timeevent_plot$X6150.1.0 == 0 & timeevent_plot$X6150.2.0 == 0 & timeevent_plot$age_attend21003_0 != timeevent_plot$age_attend21003_1, ]
# View the subsetted data
subset_data
View(subset_data)
# 读取Excel文件为data.frame
timeevent_plot20 <- read_excel("timeevent_plot20.xlsx")
# Subset the necessary columns
subset_cols <- c("eid", "age_attend21003_0", "age_attend21003_1", "age_attend21003_2", "X6150.0.0", "X6150.1.0", "X6150.2.0")
# Subset the data
cohort_data <- timeevent_plot20[, subset_cols]
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of a study cohort")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red", pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# 读取Excel文件为data.frame
timeevent_plot20 <- read_excel("timeevent_plot20.xlsx")
# Subset the necessary columns
subset_cols <- c("eid", "age_attend21003_0", "age_attend21003_1", "age_attend21003_2", "X6150.0.0", "X6150.1.0", "X6150.2.0")
# Subset the data
cohort_data <- timeevent_plot20[, subset_cols]
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of a study cohort")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red", pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red", pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "blue", pch = "X")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Subset the data
cohort_data <- timeevent_plot20[, subset_cols]
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of cohort")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red",  pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "blue", labels = "Censoring", pos = 2, pch = "X")
} else {
points(x = age_attend2, y = eid, col = "red", labels = "Event", pos = 2, pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Subset the necessary columns
subset_cols <- c("eid", "age_attend21003_0", "age_attend21003_1", "age_attend21003_2", "X6150.0.0", "X6150.1.0", "X6150.2.0")
# Subset the data
cohort_data <- timeevent_plot20[, subset_cols]
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "sample", type = "n", main = "Sample Data Plot")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "blue", pch = "x")  # Blue X represents Censoring
text(x = age_attend0, y = eid, labels = "Censoring", pos = 2, col = "blue")
} else {
points(x = age_attend0, y = eid, col = "red", pch = "x")  # Red X represents Event
text(x = age_attend0, y = eid, labels = "Event", pos = 2, col = "red")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "blue", pch = "x")  # Blue X represents Censoring
text(x = age_attend1, y = eid, labels = "Censoring", pos = 2, col = "blue")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "x")  # Red X represents Event
text(x = age_attend1, y = eid, labels = "Event", pos = 2, col = "red")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "blue", pch = "x")  # Blue X represents Censoring
text(x = age_attend2, y = eid, labels = "Censoring", pos = 2, col = "blue")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "x")  # Red X represents Event
text(x = age_attend2, y = eid, labels = "Event", pos = 2, col = "red")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
}
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of cohort")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red",  pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "blue", pch = "X")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Add legend for Censoring and Event
legend(x = "topright", legend = c("Censoring (Blue X)", "Event (Red X)"), pch = "x", col = c("blue", "red"))
# Add legend for Censoring and Event
legend(x = "topright", legend = c("Censoring", "Event"), pch = "x", col = c("blue", "red"))
# Subset the necessary columns
subset_cols <- c("eid", "age_attend21003_0", "age_attend21003_1", "age_attend21003_2", "X6150.0.0", "X6150.1.0", "X6150.2.0")
# Subset the data
cohort_data <- timeevent_plot20[, subset_cols]
# Create an empty plot
plot(x = 0, y = 0, xlim = range(cohort_data[, c("age_attend21003_0", "age_attend21003_1", "age_attend21003_2")]), ylim = range(cohort_data$eid), xlab = "Time", ylab = "Sample", type = "n", main = "Schematic overview of cohort")
# Plot each sample's lines and markers
for (i in 1:nrow(cohort_data)) {
age_attend0 <- cohort_data[i, "age_attend21003_0"]
age_attend1 <- cohort_data[i, "age_attend21003_1"]
age_attend2 <- cohort_data[i, "age_attend21003_2"]
X6150_0_0 <- cohort_data[i, "X6150.0.0"]
X6150_1_0 <- cohort_data[i, "X6150.1.0"]
X6150_2_0 <- cohort_data[i, "X6150.2.0"]
eid <- cohort_data[i, "eid"]
if (X6150_0_0 == 0) {
points(x = age_attend0, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend0, y = eid, col = "red",  pch = "X")
}
if (X6150_1_0 == 0) {
points(x = age_attend1, y = eid, col = "black", pch = ".")
} else {
points(x = age_attend1, y = eid, col = "red", pch = "X")
}
if (X6150_2_0 == 0) {
points(x = age_attend2, y = eid, col = "blue", pch = "X")
} else {
points(x = age_attend2, y = eid, col = "red", pch = "X")
}
lines(x = c(age_attend0, age_attend1, age_attend2), y = c(eid, eid, eid), col = "black")
text(x = age_attend0, y = eid, labels = as.character(age_attend0), pos = 2)
text(x = age_attend1, y = eid, labels = as.character(age_attend1), pos = 2)
text(x = age_attend2, y = eid, labels = as.character(age_attend2), pos = 2)
}
# Add a vertical line at x = 83
abline(v = 83, col = "red", lwd = 2)
# Add legend for Censoring and Event
legend(x = "topright", legend = c("Censoring", "Event"), pch = "x", col = c("blue", "red"))
png("sample_data_plot.png", width = 800, height = 600, res = 120)
png("sample_data_plot.png")
dev.off()
df_6150_0 <- df_small_data[, c("eid","X6150.0.0")]
df_6150_1 <- df_small_data[, c("eid","X6150.1.0")]
df_6150_2 <- df_small_data[, c("eid","X6150.2.0")]
df_CVD_0123 <- df_small_data[, c("eid","X6150.0.0","X6150.1.0","X6150.2.0")]
df_CVD_0123 <- df_CVD_0123[!(df_CVD_0123$X6150.0.0 %in% c(-1, -3)), ]
View(df_CVD_0123)
# 删除 X6150.0.0 列数值不等于 -7 的行
df_CVD_7 <- df_CVD_0123[df_CVD_0123$X6150.0.0 == -7, ]
View(df_CVD_7)
# 将 X6150.0.0 列的数值改为 0
df_CVD_7$X6150.0.0 <- 0
df_high_blood_pressure2966 <- df_CVD_7
df_high_blood_pressure2966$X6150.1.0 <- ifelse(df_high_blood_pressure2966$X6150.1.0 == 4, 1, 0)
View(df_high_blood_pressure2966)
df_high_blood_pressure2966$X6150.2.0 <- ifelse(df_high_blood_pressure2966$X6150.2.0 == 4, 1, 0)
# 删除 X6150.1.0 和 X6150.2.0 值全部为 NA 的列
df_high_blood_pressure2966 <- df_high_blood_pressure2966[, !is.na(df_high_blood_pressure2966$X6150.1.0) | !is.na(df_high_blood_pressure2966$X6150.2.0)]
# 删除 X6150.0.0 列数值不等于 -7 的行
df_CVD_7 <- df_CVD_0123[df_CVD_0123$X6150.0.0 == -7, ]
#df_high_blood_pressure2966
# 将 X6150.1.0 列中数值为 4 的值改为 1，其他值改为 0
df_high_blood_pressure2966 <- df_CVD_7
# 将 X6150.0.0 列的数值改为 0
df_CVD_7$X6150.0.0 <- 0
#df_high_blood_pressure2966
# 将 X6150.1.0 列中数值为 4 的值改为 1，其他值改为 0
df_high_blood_pressure2966 <- df_CVD_7
# 删除数值为 1、2、3、-1 和 -3 的行
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(df_high_blood_pressure2966$X6150.1.0 %in% c(1, 2, 3, -1, -3)), ]
# 删除 X6150.1.0 和 X6150.2.0 值全部为 NA 的列
df_high_blood_pressure2966 <- df_high_blood_pressure2966[, !(is.na(df_high_blood_pressure2966$X6150.1.0) & is.na(df_high_blood_pressure2966$X6150.2.0))]
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(df_high_blood_pressure2966$X6150.2.0 %in% c(1, 2, 3, -1, -3)), ]
df_high_blood_pressure2966$X6150.1.0 <- ifelse(df_CVD_7$X6150.1.0 == 4, 1, 0)
# 将 X6150.1.0 列中数值为 4 的值改为 1，其他值改为 0
df_high_blood_pressure2966$X6150.1.0 <- ifelse(df_CVD_7$X6150.1.0 == 4, 1, 0)
df_high_blood_pressure2966$X6150.1.0[df_high_blood_pressure2966$X6150.1.0 == 4] <- 1
df_high_blood_pressure2966$X6150.2.0[df_high_blood_pressure2966$X6150.2.0 == 4] <- 1
df_high_blood_pressure2966$X6150.1.0[df_high_blood_pressure2966$X6150.1.0 == -7] <- 0
df_high_blood_pressure2966$X6150.2.0[df_high_blood_pressure2966$X6150.2.0 == -7] <- 0
# 删除 X6150.1.0 和 X6150.2.0 值全部为 NA 的行
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(is.na(df_high_blood_pressure2966$X6150.1.0) & is.na(df_high_blood_pressure2966$X6150.2.0)), ]
View(df_high_blood_pressure2966)
##add the age
df_high_blood_pressure2966 <- merge(df_age_attend21003, df_high_blood_pressure2966[, c("eid", "X6150.0.0")], by = "eid")
View(df_high_blood_pressure2966)
df_high_blood_pressure2966 <- merge(df_high_blood_pressure2966, df_CVD_0123[, c("eid", "X6150.1.0")], by = "eid")
df_high_blood_pressure2966 <- merge(df_high_blood_pressure2966, df_CVD_0123[, c("eid", "X6150.2.0")], by = "eid")
df_high_blood_pressure2966 <- df_high_blood_pressure2966[, -which(namesdf_high_blood_pressure2966 == "age_attend21003_3")]
View(df_high_blood_pressure2966)
#df_high_blood_pressure2966
# 将 X6150.1.0 列中数值为 4 的值改为 1，其他值改为 0
df_high_blood_pressure2966 <- df_CVD_7
# 删除数值为 1、2、3、-1 和 -3 的行
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(df_high_blood_pressure2966$X6150.1.0 %in% c(1, 2, 3, -1, -3)), ]
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(df_high_blood_pressure2966$X6150.2.0 %in% c(1, 2, 3, -1, -3)), ]
# 将 X6150.1.0 列中数值为 4 的值改为 1，其他值改为 0
df_high_blood_pressure2966$X6150.1.0[df_high_blood_pressure2966$X6150.1.0 == 4] <- 1
df_high_blood_pressure2966$X6150.2.0[df_high_blood_pressure2966$X6150.2.0 == 4] <- 1
df_high_blood_pressure2966$X6150.1.0[df_high_blood_pressure2966$X6150.1.0 == -7] <- 0
df_high_blood_pressure2966$X6150.2.0[df_high_blood_pressure2966$X6150.2.0 == -7] <- 0
# 删除 X6150.1.0 和 X6150.2.0 值全部为 NA 的行
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(is.na(df_high_blood_pressure2966$X6150.1.0) & is.na(df_high_blood_pressure2966$X6150.2.0)), ]
df_high_blood_pressure2966 <- merge(df_age_attend21003, df_high_blood_pressure2966[, c("eid", "X6150.0.0")], by = "eid")
df_high_blood_pressure2966 <- merge(df_high_blood_pressure2966, df_high_blood_pressure2966[, c("eid", "X6150.1.0")], by = "eid")
df_high_blood_pressure2966 <- merge(df_age_attend21003, df_high_blood_pressure2966[, c("eid", "X6150.0.0","X6150.1.0","X6150.2.0")], by = "eid")
View(df_high_blood_pressure2966)
df_high_blood_pressure2966 <- df_CVD_7
# 删除数值为 1、2、3、-1 和 -3 的行
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(df_high_blood_pressure2966$X6150.1.0 %in% c(1, 2, 3, -1, -3)), ]
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(df_high_blood_pressure2966$X6150.2.0 %in% c(1, 2, 3, -1, -3)), ]
# 将 X6150.1.0 列中数值为 4 的值改为 1，其他值改为 0
df_high_blood_pressure2966$X6150.1.0[df_high_blood_pressure2966$X6150.1.0 == 4] <- 1
df_high_blood_pressure2966$X6150.2.0[df_high_blood_pressure2966$X6150.2.0 == 4] <- 1
df_high_blood_pressure2966$X6150.1.0[df_high_blood_pressure2966$X6150.1.0 == -7] <- 0
df_high_blood_pressure2966$X6150.2.0[df_high_blood_pressure2966$X6150.2.0 == -7] <- 0
# 删除 X6150.1.0 和 X6150.2.0 值全部为 NA 的行
df_high_blood_pressure2966 <- df_high_blood_pressure2966[!(is.na(df_high_blood_pressure2966$X6150.1.0) & is.na(df_high_blood_pressure2966$X6150.2.0)), ]
##add the age
df_high_blood_pressure2966 <- merge(df_age_attend21003, df_high_blood_pressure2966[, c("eid", "X6150.0.0","X6150.1.0","X6150.2.0")], by = "eid")
df_high_blood_pressure2966 <- df_high_blood_pressure2966[, -which(namesdf_high_blood_pressure2966 == "age_attend21003_3")]
df_high_blood_pressure2966 <- df_high_blood_pressure2966[, -which(names(df_high_blood_pressure2966) == "age_attend21003_3")]
write.csv(df_high_blood_pressure2966, file = "df_high_blood_pressure2966.csv")
library(survival)
library(survminer)
# 创建时间事件数据
time_event_data <- Surv(time = df_high_blood_pressure2966$X6150.0.0,
event = df_high_blood_pressure2966$X6150.0.0)
# 创建 Kaplan-Meier 生存分析对象
km_survival <- survfit(time_event_data ~ X6150.0.0 + X6150.1.0 + X6150.2.0,
data = df_high_blood_pressure2966)
# 绘制 Kaplan-Meier 曲线
ggsurvplot(km_survival, data = df_high_blood_pressure2966,
risk.table = TRUE, pval = TRUE,
xlab = "Time", ylab = "Survival Probability")
time <- df_heartmodel_CVD_Yes_NO_all$age
event <- df_heartmodel_CVD_Yes_NO_all$CVD6150
surv_obj <- Surv(time, event)
cox_model <- coxph(surv_obj ~ time)
summary(cox_model)
rs11208648_G <-df_heartmodel_CVD_Yes_NO_all$rs11208648_G
surv_fit <- survfit(surv_obj ~ rs11208648_G)
# 绘制Kaplan-Meier曲线
ggsurvplot(surv_fit, data = df_heartmodel_CVD_Yes_NO_all, risk.table = TRUE, legend.title = "rs11208648_G",
xlab = "Time", ylab = "Survival Probability", surv.median.line = "hv")
df_6150_1 <- df_small_data[, c("eid","X6150.1.0")]
df_6150_1 <- df_6150_1[df_6150_1$X6150.1.0 != -3, ]
df_6150_1 <- na.omit(df_6150_1)
df_heart_attack_1 <- df_6150_1
df_heart_attack_1$X6150.1.0[df_heart_attack_1$X6150.1.0 != 1] <- 0
df_6150_2 <- df_small_data[, c("eid","X6150.2.0")]
df_6150_2 <- df_6150_2[df_6150_2$X6150.2.0 != -3, ]
df_heart_attack_2 <- df_6150_2
df_heart_attack_2$X6150.2.0[df_heart_attack_2$X6150.2.0 != 1] <- 0
df_heart_attack_2 <- na.omit(df_heart_attack_2)
df_6150_time_to_event_1 <- merge(df_6150_0, df_6150_1, by = "eid",  all = TRUE)
df_6150_time_to_event <- merge(df_6150_time_to_event, df_6150_2, by = "eid", all = TRUE)
df_heartmodel_CVD_Yes_NO_all
df_kidneymodel_Microalbumin <- select(df_kidneymodel_all, -eGFR, -CKD)
library(dplyr)
library(broom)
df_kidneymodel_Microalbumin <- select(df_kidneymodel_all, -eGFR, -CKD)
df <- read.csv("df_kidneymodel_all.cvd")
